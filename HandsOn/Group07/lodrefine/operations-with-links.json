[
  {
    "op": "core/column-removal",
    "columnName": "Column",
    "description": "Remove column Column"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "value",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column value using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "station_lon",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column station_lon using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "station_lat",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column station_lat using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "station_elevation",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column station_elevation using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "station",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column station using expression value.toNumber()"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "station",
    "newColumnName": "station_id",
    "description": "Rename column station to station_id"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "date",
    "newColumnName": "measurement_date",
    "description": "Rename column date to measurement_date"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "value",
    "newColumnName": "measurement_value",
    "description": "Rename column value to measurement_value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "station_name",
    "expression": "grel:replace(value,\".\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column station_name using expression grel:replace(value,\".\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "station_name",
    "expression": "grel:replace(value,\" \",\"_\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column station_name using expression grel:replace(value,\" \",\"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "station_name",
    "expression": "grel:replace(value,\"침\",\"n\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column station_name using expression grel:replace(value,\"침\",\"n\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "station_name",
    "expression": "grel:replace(value,\"칩\",\"o\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column station_name using expression grel:replace(value,\"칩\",\"o\")"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q11173",
        "name": "chemical compound"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column pollutant_name to type Q11173"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Benzene",
    "judgment": "matched",
    "match": {
      "id": "Q2270",
      "name": "benzene",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item benzene (Q2270) for cells containing \"Benzene\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Metane",
    "judgment": "matched",
    "match": {
      "id": "Q37129",
      "name": "methane",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item methane (Q37129) for cells containing \"Metane\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Carbon Monoxide",
    "judgment": "matched",
    "match": {
      "id": "Q2025",
      "name": "carbon monoxide",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item carbon monoxide (Q2025) for cells containing \"Carbon Monoxide\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Ethylbenzene",
    "judgment": "matched",
    "match": {
      "id": "Q409184",
      "name": "ethylbenzene",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item ethylbenzene (Q409184) for cells containing \"Ethylbenzene\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Volatile Organic Compound",
    "judgment": "matched",
    "match": {
      "id": "Q910267",
      "name": "volatile organic compound",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item volatile organic compound (Q910267) for cells containing \"Volatile Organic Compound\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Nitric Oxide",
    "judgment": "matched",
    "match": {
      "id": "Q207843",
      "name": "nitric oxide (radical)",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item nitric oxide (radical) (Q207843) for cells containing \"Nitric Oxide\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Nitrogen Dioxide",
    "judgment": "matched",
    "match": {
      "id": "Q207895",
      "name": "nitrogen dioxide",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item nitrogen dioxide (Q207895) for cells containing \"Nitrogen Dioxide\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Nitrous Oxide",
    "judgment": "matched",
    "match": {
      "id": "Q905750",
      "name": "nitrous oxide",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item nitrous oxide (Q905750) for cells containing \"Nitrous Oxide\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Ozone",
    "judgment": "matched",
    "match": {
      "id": "Q36933",
      "name": "ozone",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item ozone (Q36933) for cells containing \"Ozone\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "PM 10 (excluding PM 2.5)",
    "judgment": "matched",
    "match": {
      "id": "Q48035980",
      "name": "PM 10 (excluding PM 2.5)",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item PM 10 (excluding PM 2.5) (Q48035980) for cells containing \"PM 10 (excluding PM 2.5)\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "PM 2.5",
    "judgment": "matched",
    "match": {
      "id": "Q48035814",
      "name": "PM 2.5",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item PM 2.5 (Q48035814) for cells containing \"PM 2.5\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Sulfur Dioxide",
    "judgment": "matched",
    "match": {
      "id": "Q5282",
      "name": "sulfur dioxide",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item sulfur dioxide (Q5282) for cells containing \"Sulfur Dioxide\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Hydrocarbon",
    "judgment": "matched",
    "match": {
      "id": "Q43648",
      "name": "hydrocarbon",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item hydrocarbon (Q43648) for cells containing \"Hydrocarbon\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Toluene",
    "judgment": "matched",
    "match": {
      "id": "Q15779",
      "name": "toluene",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item toluene (Q15779) for cells containing \"Toluene\" in column pollutant_name"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Benzene",
    "judgment": "matched",
    "match": {
      "id": "Q2270",
      "name": "benzene",
      "types": [
        "Q11173",
        "Q21009055",
        "Q21074597"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item benzene (Q2270) for cells containing \"Benzene\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name",
          "expression": "value",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Hydrocarbon",
                "l": "Hydrocarbon"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Hydrocarbon",
    "judgment": "matched",
    "match": {
      "id": "Q43648",
      "name": "hydrocarbon",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item hydrocarbon (Q43648) for cells containing \"Hydrocarbon\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name",
          "expression": "value",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Metane",
                "l": "Metane"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Metane",
    "judgment": "matched",
    "match": {
      "id": "Q37129",
      "name": "methane",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item methane (Q37129) for cells containing \"Metane\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name",
          "expression": "value",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Nitrogen Dioxide",
                "l": "Nitrogen Dioxide"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Nitrogen Dioxide",
    "judgment": "matched",
    "match": {
      "id": "Q207895",
      "name": "nitrogen dioxide",
      "types": [
        "Q11173"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item nitrogen dioxide (Q207895) for cells containing \"Nitrogen Dioxide\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name",
          "expression": "value",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Ozone",
                "l": "Ozone"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Ozone",
    "judgment": "matched",
    "match": {
      "id": "Q36933",
      "name": "ozone",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item ozone (Q36933) for cells containing \"Ozone\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name",
          "expression": "value",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "PM 10 (excluding PM 2.5)",
                "l": "PM 10 (excluding PM 2.5)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "PM 10 (excluding PM 2.5)",
    "judgment": "matched",
    "match": {
      "id": "Q48035980",
      "name": "PM 10 (excluding PM 2.5)",
      "types": [
        ""
      ],
      "score": 50
    },
    "shareNewTopics": false,
    "description": "Match item PM 10 (excluding PM 2.5) (Q48035980) for cells containing \"PM 10 (excluding PM 2.5)\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name",
          "expression": "value",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "PM 2.5",
                "l": "PM 2.5"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "PM 2.5",
    "judgment": "matched",
    "match": {
      "id": "Q48035814",
      "name": "PM 2.5",
      "types": [
        ""
      ],
      "score": 50
    },
    "shareNewTopics": false,
    "description": "Match item PM 2.5 (Q48035814) for cells containing \"PM 2.5\" in column pollutant_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "pollutant_name",
          "expression": "value",
          "columnName": "pollutant_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Volatile Organic Compound",
                "l": "Volatile Organic Compound"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "pollutant_name",
    "similarValue": "Volatile Organic Compound",
    "judgment": "matched",
    "match": {
      "id": "Q910267",
      "name": "volatile organic compound",
      "types": [
        ""
      ],
      "score": 50
    },
    "shareNewTopics": false,
    "description": "Match item volatile organic compound (Q910267) for cells containing \"Volatile Organic Compound\" in column pollutant_name"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "pollutant_name",
    "expression": "grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "pollutant_URI_from_Wikidata",
    "columnInsertIndex": 11,
    "description": "Create column pollutant_URI_from_Wikidata at index 11 based on column pollutant_name using expression grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "config": {
      "mode": "standard-service",
      "service": "https://tools.wmflabs.org/openrefine-wikidata/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q10267336",
        "name": "neighborhood of Madrid"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column neighbourhood_name to type Q10267336"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "expression": "grel:replace(value,\"Recoletas\",\"Recoletos\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column neighbourhood_name using expression grel:replace(value,\"Recoletas\",\"Recoletos\")"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Recoletos",
    "judgment": "matched",
    "match": {
      "id": "Q3814551",
      "name": "Recoletos",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Recoletos (Q3814551) for cells containing \"Recoletos\" in column neighbourhood_name"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "expression": "grel:replace(value,\"Case_de_Campo\",\"Casa_de_Campo\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column neighbourhood_name using expression grel:replace(value,\"Case_de_Campo\",\"Casa_de_Campo\")"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Casa_de_Campo",
    "judgment": "matched",
    "match": {
      "id": "Q16302441",
      "name": "Casa de Campo",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Casa de Campo (Q16302441) for cells containing \"Casa_de_Campo\" in column neighbourhood_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Cuatro_Caminos",
    "judgment": "matched",
    "match": {
      "id": "Q5824684",
      "name": "Cuatro Caminos",
      "types": [
        "Q10267336"
      ],
      "score": 57
    },
    "shareNewTopics": false,
    "description": "Match item Cuatro Caminos (Q5824684) for cells containing \"Cuatro_Caminos\" in column neighbourhood_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Alameda_de_Osuna",
    "judgment": "matched",
    "match": {
      "id": "Q760737",
      "name": "Alameda de Osuna",
      "types": [
        "Q10267336"
      ],
      "score": 88
    },
    "shareNewTopics": false,
    "description": "Match item Alameda de Osuna (Q760737) for cells containing \"Alameda_de_Osuna\" in column neighbourhood_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "neighbourhood_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "neighbourhood_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Isidro",
    "judgment": "matched",
    "match": {
      "id": "Q3813733",
      "name": "San Isidro",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item San Isidro (Q3813733) for cells containing \"Isidro\" in column neighbourhood_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "neighbourhood_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "neighbourhood_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Pilar",
    "judgment": "matched",
    "match": {
      "id": "Q3773964",
      "name": "El Pilar",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item El Pilar (Q3773964) for cells containing \"Pilar\" in column neighbourhood_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "neighbourhood_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "neighbourhood_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Villaverde",
    "judgment": "matched",
    "match": {
      "id": "Q390435",
      "name": "Villaverde Alto, Casco Hist칩rico de Villaverde",
      "types": [
        "Q10267336"
      ],
      "score": 80
    },
    "shareNewTopics": false,
    "description": "Match item Villaverde Alto, Casco Hist칩rico de Villaverde (Q390435) for cells containing \"Villaverde\" in column neighbourhood_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "neighbourhood_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "neighbourhood_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Casco_de_Barajas",
    "judgment": "matched",
    "match": {
      "id": "Q9701730",
      "name": "Casco Hist칩rico de Barajas",
      "types": [
        "Q10267336"
      ],
      "score": 53
    },
    "shareNewTopics": false,
    "description": "Match item Casco Hist칩rico de Barajas (Q9701730) for cells containing \"Casco_de_Barajas\" in column neighbourhood_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "neighbourhood_name: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "neighbourhood_name",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "neighbourhood_name",
    "similarValue": "Vallecas",
    "judgment": "matched",
    "match": {
      "id": "Q3847485",
      "name": "Ensanche de Vallecas",
      "types": [
        "Q10267336"
      ],
      "score": 57
    },
    "shareNewTopics": false,
    "description": "Match item Ensanche de Vallecas (Q3847485) for cells containing \"Vallecas\" in column neighbourhood_name"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "neighbourhood_name",
    "expression": "grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "neighbourhood_URI_from_Wikidata",
    "columnInsertIndex": 6,
    "description": "Create column neighbourhood_URI_from_Wikidata at index 6 based on column neighbourhood_name using expression grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id"
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "neighbourhood_name",
    "newColumnName": "neighbourhood_id",
    "description": "Rename column neighbourhood_name to neighbourhood_id"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "neighbourhood_id",
    "expression": "jython:if (value == \"Recoletos\"): return value\nelif (value == \"Hispanoamerica\"): return \"Hispanoam칠rica\"\nelif (value == \"Isidro\"): return \"San Isidro\"\nelif (value == \"Casa_de_Campo\"): return \"Casa de Campo\"\nelif (value == \"Cuatro_Caminos\"): return \"Cuatro Caminos\"\nelif (value == \"Alameda_de_Osuna\"): return \"Alameda de Osuna\"\nelif (value == \"Colina\"): return \"Colina\"\nelif (value == \"Casco_de_Barajas\"): return \"Casco Hist칩rico de Barajas\"\nelif (value == \"Pilar\"): return \"El Pilar\"\nelif (value == \"Castellana\"): return \"Castellana\"\nelif (value == \"Pardo\"): return \"El Pardo\"\nelif (value == \"Vallecas\"): return \"Vallecas\"\nelif (value == \"Corralejos\"): return \"Corralejos\"\nelif (value == \"Atocha\"): return \"Atocha\"\nelif (value == \"Vinateros\"): return \"Vinateros\"\nelif (value == \"Jeronimos\"): return \"Jer칩nimos\"\nelif (value == \"Castilla\"): return \"Castilla\"\nelif (value == \"Arguelles\"): return \"Arg칲elles\"\nelif (value == \"Sol\"): return \"Sol\"\nelif (value == \"Abrantes\"): return \"Abrantes\"\nelif (value == \"Valdefuentes\"): return \"Valdefuentes\"\nelif (value == \"Valverde\"): return \"Valverde\"\nelif (value == \"Villaverde\"): return \"Villaverde Alto, Casco Hist칩rico de Villaverde\"",
    "onError": "set-to-blank",
    "newColumnName": "neighbourhood_name",
    "columnInsertIndex": 6,
    "description": "Create column neighbourhood_name at index 6 based on column neighbourhood_id using expression jython:if (value == \"Recoletos\"): return value\nelif (value == \"Hispanoamerica\"): return \"Hispanoam칠rica\"\nelif (value == \"Isidro\"): return \"San Isidro\"\nelif (value == \"Casa_de_Campo\"): return \"Casa de Campo\"\nelif (value == \"Cuatro_Caminos\"): return \"Cuatro Caminos\"\nelif (value == \"Alameda_de_Osuna\"): return \"Alameda de Osuna\"\nelif (value == \"Colina\"): return \"Colina\"\nelif (value == \"Casco_de_Barajas\"): return \"Casco Hist칩rico de Barajas\"\nelif (value == \"Pilar\"): return \"El Pilar\"\nelif (value == \"Castellana\"): return \"Castellana\"\nelif (value == \"Pardo\"): return \"El Pardo\"\nelif (value == \"Vallecas\"): return \"Vallecas\"\nelif (value == \"Corralejos\"): return \"Corralejos\"\nelif (value == \"Atocha\"): return \"Atocha\"\nelif (value == \"Vinateros\"): return \"Vinateros\"\nelif (value == \"Jeronimos\"): return \"Jer칩nimos\"\nelif (value == \"Castilla\"): return \"Castilla\"\nelif (value == \"Arguelles\"): return \"Arg칲elles\"\nelif (value == \"Sol\"): return \"Sol\"\nelif (value == \"Abrantes\"): return \"Abrantes\"\nelif (value == \"Valdefuentes\"): return \"Valdefuentes\"\nelif (value == \"Valverde\"): return \"Valverde\"\nelif (value == \"Villaverde\"): return \"Villaverde Alto, Casco Hist칩rico de Villaverde\""
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [],
      "baseUri": null,
      "rootNodes": []
    }
  },
  {
    "op": "rdf-extension/save-rdf-schema",
    "description": "Save RDF schema skeleton",
    "schema": {
      "prefixes": [
        {
          "name": "",
          "uri": ""
        },
        {
          "name": "rdf",
          "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
        },
        {
          "name": "owl",
          "uri": "http://www.w3.org/2002/07/owl#"
        },
        {
          "name": "wiki",
          "uri": "https://www.wikidata.org/wiki/"
        },
        {
          "name": "poll_sens",
          "uri": "http://www.airqualitymadrid.es/resource/pollution_sensor/"
        },
        {
          "name": "meas",
          "uri": "http://www.airqualitymadrid.es/resource/measurement/"
        },
        {
          "name": "rdfs",
          "uri": "http://www.w3.org/2000/01/rdf-schema#"
        },
        {
          "name": "poll",
          "uri": "http://www.airqualitymadrid.es/resource/pollutant/"
        },
        {
          "name": "aqm",
          "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#"
        },
        {
          "name": "addr",
          "uri": "http://www.airqualitymadrid.es/resource/address/"
        },
        {
          "name": "foaf",
          "uri": "http://xmlns.com/foaf/0.1/"
        },
        {
          "name": "neigh",
          "uri": "http://www.airqualitymadrid.es/resource/neighbourhood/"
        }
      ],
      "baseUri": "http://www.airqualitymadrid.es/resource/",
      "rootNodes": [
        {
          "nodeType": "cell-as-resource",
          "columnName": "station_id",
          "expression": "\"pollution_sensor/\"+value",
          "isRowNumberCell": false,
          "links": [
            {
              "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasCollected",
              "curie": ":hasCollected",
              "target": {
                "nodeType": "cell-as-resource",
                "columnName": "measurement_id",
                "expression": "\"measurement/\"+value",
                "isRowNumberCell": false,
                "links": [
                  {
                    "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasMeasurementDate",
                    "curie": ":hasMeasurementDate",
                    "target": {
                      "nodeType": "cell-as-literal",
                      "columnName": "measurement_date",
                      "expression": "value",
                      "valueType": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "isRowNumberCell": false
                    }
                  },
                  {
                    "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasMeasurementValue",
                    "curie": ":hasMeasurementValue",
                    "target": {
                      "nodeType": "cell-as-literal",
                      "columnName": "measurement_value",
                      "expression": "value",
                      "valueType": "https://www.w3.org/2001/XMLSchema#float",
                      "isRowNumberCell": false
                    }
                  },
                  {
                    "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasPollutant",
                    "curie": ":hasPollutant",
                    "target": {
                      "nodeType": "cell-as-resource",
                      "columnName": "pollutant",
                      "expression": "\"pollutant/\"+value",
                      "isRowNumberCell": false,
                      "links": [
                        {
                          "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasPollutantName",
                          "curie": ":hasPollutantName",
                          "target": {
                            "nodeType": "cell-as-literal",
                            "columnName": "pollutant_name",
                            "expression": "value",
                            "isRowNumberCell": false
                          }
                        },
                        {
                          "uri": "http://www.w3.org/2002/07/owl#sameAs",
                          "curie": "owl:sameAs",
                          "target": {
                            "nodeType": "cell-as-resource",
                            "columnName": "pollutant_URI_from_Wikidata",
                            "expression": "value",
                            "isRowNumberCell": false,
                            "links": [],
                            "rdfTypes": []
                          }
                        }
                      ],
                      "rdfTypes": [
                        {
                          "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#Pollutant",
                          "curie": ":Pollutant"
                        }
                      ]
                    }
                  }
                ],
                "rdfTypes": [
                  {
                    "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#Measurement",
                    "curie": ":Measurement"
                  }
                ]
              }
            },
            {
              "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#placedIn",
              "curie": ":placedIn",
              "target": {
                "nodeType": "cell-as-resource",
                "columnName": "station_name",
                "expression": "\"address/\"+value",
                "isRowNumberCell": false,
                "links": [
                  {
                    "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasAddress",
                    "curie": ":hasAddress",
                    "target": {
                      "nodeType": "cell-as-literal",
                      "columnName": "station_address",
                      "expression": "value",
                      "isRowNumberCell": false
                    }
                  },
                  {
                    "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#placedInNeighbourhood",
                    "curie": ":placedInNeighbourhood",
                    "target": {
                      "nodeType": "cell-as-resource",
                      "columnName": "neighbourhood_id",
                      "expression": "\"neighbourhood/\"+value",
                      "isRowNumberCell": false,
                      "links": [
                        {
                          "uri": "http://www.w3.org/2002/07/owl#sameAs",
                          "curie": "owl:sameAs",
                          "target": {
                            "nodeType": "cell-as-resource",
                            "columnName": "neighbourhood_URI_from_Wikidata",
                            "expression": "value",
                            "isRowNumberCell": false,
                            "links": [],
                            "rdfTypes": []
                          }
                        },
                        {
                          "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasNeighbourhoodName",
                          "curie": ":hasNeighbourhoodName",
                          "target": {
                            "nodeType": "cell-as-literal",
                            "columnName": "neighbourhood_name",
                            "expression": "value",
                            "isRowNumberCell": false
                          }
                        }
                      ],
                      "rdfTypes": [
                        {
                          "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#Neighbourhood",
                          "curie": ":Neighbourhood"
                        }
                      ]
                    }
                  }
                ],
                "rdfTypes": [
                  {
                    "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#Address",
                    "curie": ":Address"
                  }
                ]
              }
            },
            {
              "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasLatitude",
              "curie": ":hasLatitude",
              "target": {
                "nodeType": "cell-as-literal",
                "columnName": "station_lat",
                "expression": "value",
                "valueType": "https://www.w3.org/2001/XMLSchema#float",
                "isRowNumberCell": false
              }
            },
            {
              "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasLongitude",
              "curie": ":hasLongitude",
              "target": {
                "nodeType": "cell-as-literal",
                "columnName": "station_lon",
                "expression": "value",
                "valueType": "https://www.w3.org/2001/XMLSchema#float",
                "isRowNumberCell": false
              }
            },
            {
              "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#hasSensorElevation",
              "curie": ":hasSensorElevation",
              "target": {
                "nodeType": "cell-as-literal",
                "columnName": "station_elevation",
                "expression": "value",
                "valueType": "http://www.w3.org/2001/XMLSchema#int",
                "isRowNumberCell": false
              }
            }
          ],
          "rdfTypes": [
            {
              "uri": "http://www.airqualitymadrid.es/ontologies/airqualitymadrid#PollutionSensor",
              "curie": ":PollutionSensor"
            }
          ]
        }
      ]
    }
  }
]